/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SiteRouteImport } from './routes/_site'
import { Route as SiteIndexRouteImport } from './routes/_site/index'
import { Route as SitePokemonRouteImport } from './routes/_site/pokemon'
import { Route as SitePokemonPokemonRouteImport } from './routes/_site/pokemon/$pokemon'

const SiteRoute = SiteRouteImport.update({
  id: '/_site',
  getParentRoute: () => rootRouteImport,
} as any)
const SiteIndexRoute = SiteIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteRoute,
} as any)
const SitePokemonRoute = SitePokemonRouteImport.update({
  id: '/pokemon',
  path: '/pokemon',
  getParentRoute: () => SiteRoute,
} as any)
const SitePokemonPokemonRoute = SitePokemonPokemonRouteImport.update({
  id: '/$pokemon',
  path: '/$pokemon',
  getParentRoute: () => SitePokemonRoute,
} as any)

export interface FileRoutesByFullPath {
  '/pokemon': typeof SitePokemonRouteWithChildren
  '/': typeof SiteIndexRoute
  '/pokemon/$pokemon': typeof SitePokemonPokemonRoute
}
export interface FileRoutesByTo {
  '/pokemon': typeof SitePokemonRouteWithChildren
  '/': typeof SiteIndexRoute
  '/pokemon/$pokemon': typeof SitePokemonPokemonRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_site': typeof SiteRouteWithChildren
  '/_site/pokemon': typeof SitePokemonRouteWithChildren
  '/_site/': typeof SiteIndexRoute
  '/_site/pokemon/$pokemon': typeof SitePokemonPokemonRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/pokemon' | '/' | '/pokemon/$pokemon'
  fileRoutesByTo: FileRoutesByTo
  to: '/pokemon' | '/' | '/pokemon/$pokemon'
  id:
    | '__root__'
    | '/_site'
    | '/_site/pokemon'
    | '/_site/'
    | '/_site/pokemon/$pokemon'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SiteRoute: typeof SiteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_site': {
      id: '/_site'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SiteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_site/': {
      id: '/_site/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof SiteIndexRouteImport
      parentRoute: typeof SiteRoute
    }
    '/_site/pokemon': {
      id: '/_site/pokemon'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof SitePokemonRouteImport
      parentRoute: typeof SiteRoute
    }
    '/_site/pokemon/$pokemon': {
      id: '/_site/pokemon/$pokemon'
      path: '/$pokemon'
      fullPath: '/pokemon/$pokemon'
      preLoaderRoute: typeof SitePokemonPokemonRouteImport
      parentRoute: typeof SitePokemonRoute
    }
  }
}

interface SitePokemonRouteChildren {
  SitePokemonPokemonRoute: typeof SitePokemonPokemonRoute
}

const SitePokemonRouteChildren: SitePokemonRouteChildren = {
  SitePokemonPokemonRoute: SitePokemonPokemonRoute,
}

const SitePokemonRouteWithChildren = SitePokemonRoute._addFileChildren(
  SitePokemonRouteChildren,
)

interface SiteRouteChildren {
  SitePokemonRoute: typeof SitePokemonRouteWithChildren
  SiteIndexRoute: typeof SiteIndexRoute
}

const SiteRouteChildren: SiteRouteChildren = {
  SitePokemonRoute: SitePokemonRouteWithChildren,
  SiteIndexRoute: SiteIndexRoute,
}

const SiteRouteWithChildren = SiteRoute._addFileChildren(SiteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  SiteRoute: SiteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
